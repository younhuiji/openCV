
오디오 처리와 음악 정보 검색(MIR:Music Information Retrieval) 분야에서 사용할 수 있는 다양한 Python 라이브러리

1. PyDub  : 다양한 오디오 형식을 지원하며, 오디오 파일의 편집이나 변환에 유용
https://github.com/jiaaro/pydub

2. Music21 :음악 이론, 음악 분석, 그리고 악보 생성에 사용
http://web.mit.edu/music21/

3. FluidSynth : MIDI 이벤트를 실시간 오디오로 렌더링
https://www.fluidsynth.org/

4. pretty_midi : MIDI 파일을 읽고 쓰고, 분석
https://github.com/craffel/pretty-midi

5. Essentia : 매우 광범위한 오디오 분석 기능을 제공하며, 고성능이 필요한 상황에서도 적합
https://essentia.upf.edu/

6. Madmom :음악 정보 검색과 오디오 신호 처리에 특화된 라이브러리. 특히 리듬 분석에 강점
https://github.com/CPJKU/madmom

7. scipy.io.wavfile : SciPy 라이브러리 내에 있는 wav 파일 입출력 모듈, 기본적인 오디오 처리에 사용
https://docs.scipy.org/doc/scipy/reference/io.html


========================================================================
1. 기초 예제
Waveform 그리기: 오디오 파일에서 waveform을 그리는 기본적인 예제
Spectrogram 생성: FFT(Fast Fourier Transform)나 STFT(Short-Time Fourier Transform)를 사용하여 spectrogram을 그리기

2. 특성(특징) 추출 예제
MFCC 계산: Mel-frequency cepstral coefficients를 계산하고 그래프로 표시
Chroma features 계산: Chroma 특성을 추출하여 그래프로 표시

3. 음악 정보 검색 (Music Information Retrieval, MIR)
템포 추정: 오디오에서 템포(beat)를 추정
음고 분석: 기본 주파수(F0)나 피치를 추출

==========================<> =============
4. 분류 문제 예제
장르 분류: 여러 음악 장르에 대해 MFCC나 다른 특성을 사용하여 분류 모델 생성
음성/음악 구분: 음성과 음악을 구분하는 분류 모델 생성

5. 고급 분석 예제
음성 인식: 오디오에서 특정 단어나 구절을 인식
감정 분석: 음성에서 감정을 분석 (ex: 행복, 슬픔, 분노 등)

6. 시계열 데이터 분석
Onset Detection: 음악이나 음성에서 onset(시작 부분)을 감지
Beat Tracking: 비트를 추적하고 그 위치를 표시

